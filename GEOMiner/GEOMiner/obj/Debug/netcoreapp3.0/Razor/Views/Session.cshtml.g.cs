#pragma checksum "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4d7be1c42b4aadfcb7d118f1942cbb5937e6550d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Session), @"mvc.1.0.view", @"/Views/Session.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\_ViewImports.cshtml"
using GEOMiner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\_ViewImports.cshtml"
using GEOMiner.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4d7be1c42b4aadfcb7d118f1942cbb5937e6550d", @"/Views/Session.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8baac1ab9e8d1c207bfe542c82f899855fea014f", @"/Views/_ViewImports.cshtml")]
    public class Views_Session : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GEOMiner.Models.SessionModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
  
    ViewData["Title"] = "Session";

#line default
#line hidden
#nullable disable
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        //alert('Starttest');
        function addEventHandler(obj, evt, handler) {
            if (obj.addEventListener) {
                obj.addEventListener(evt, handler, false);
            }
            else if (obj.attachEvent) {
                ob.attachEvent('on' + evt, handler);
            }
            else {
                obj['on' + evt] = handler;
            }
        }
        $(document).ready(function () {
            //alert(""ready"");
            $('#buttonCheckFile').click(function () {
                $('#formUpload').submit();
            });

            $('#file').change(function () {
                $('#buttonCheckFile').removeAttr(""disabled"");
                $('#fileName').attr(""disabled"", ""disabled"");
                if ($(this).val() == """") {
                    $('#buttuonCheckFile').attr(""disabled"", ""disabled"");
                    $('#fileName').removeAttr(""disabled"");
                }
            });
            //alert('File.change");
                WriteLiteral(@"');

            $('#fileName').change(function () {
                $('#buttonCheckFile').removeAttr(""disabled"");
                $('#file').attr(""disabled"", ""disabled"");
                if ($('#fileName').val() == """") {
                    $('#buttuonCheckFile').attr(""disabled"", ""disabled"");
                    $('#file').removeAttr(""disabled"");
                }
            });
            //alert('FileName.change');

            if (window.FileReader) {
                var drop = document.getElementById('dropZone');
                function cancel(e) {
                    if (e.preventDefault) { e.preventDefault(); } return false;
                }

                addEventHandler(drop, 'dragover', cancel);
                addEventHandler(drop, 'dragenter', cancel);
                //alert(""FileReader"");
            }


            addEventHandler(drop, 'drop', function (e) {
                if (drop != null && drop != undefined) {
                    e = e || window.event;
    ");
                WriteLiteral(@"                if (e.preventDefault) {
                        e.preventDefault();
                    }
                    var dt = e.dataTransfer;
                    var files = dt.files;
                    if (files.length > 0) {
                        var file = files[0];
                        var reader = new FileReader();
                        reader.onload = function (event) {
                            $('#fileString').val(event.target.result);
                            $('#fileName').val(file.name);
                            $('#fileName').change();

                        }
                        reader.readAsDataURL(file);
                        return true;
                    }
                }
                return false;
            })
            //alert('EndTest');

        })
    </script>
");
            }
            );
            WriteLiteral("\r\n");
#nullable restore
#line 87 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
 using (Html.BeginForm("LoadSessionFromFile", "Session", FormMethod.Post, new { enctype = "multipart/form-data", id = "formUpload" }))
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <div class=\"form-group\" id=\"selectZone\">\r\n        <label id=\"fileLabel\" class=\"col-xl-12\" for=\"file\">Datei auswählen</label>\r\n        ");
#nullable restore
#line 91 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
   Write(Html.TextBoxFor(m => m.file, new { type = "file", accept = ".xml", placeholder = "Bitte die Datei auswählen", @class = "fileinput"}));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        ");
#nullable restore
#line 92 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
   Write(Html.ValidationMessageFor(m => m.file));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n");
            WriteLiteral("    <div class=\"form-group\" id=\"dropZone\">\r\n        <label id=\"fileNameLabel\" class=\"col-xl-12\" for=\"fileName\">Datei reinziehen</label>\r\n        ");
#nullable restore
#line 97 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
   Write(Html.TextBoxFor(m => m.fileName, new { accept = ".xml", placeholder = "Bitte ziehen sie hier ihre Datei rein.", @class="filedrop" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        ");
#nullable restore
#line 98 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
   Write(Html.HiddenFor(m => m.fileString));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n    </div>\r\n");
#nullable restore
#line 102 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
     if (Model.valError)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <p style=\"color:red\">");
#nullable restore
#line 104 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
                        Write(Html.DisplayFor(m => m.validationMessage));

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 105 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
    }
    else
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <p><font color=\"green\">");
#nullable restore
#line 108 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
                          Write(Html.DisplayFor(m => m.validationMessage));

#line default
#line hidden
#nullable disable
            WriteLiteral("</font></p>\r\n");
#nullable restore
#line 109 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("    <button class=\"button\" type=\"submit\" id=\"buttonCheckFile\" disabled=\"disabled\">Load</button>\r\n");
#nullable restore
#line 112 "C:\Users\Sebas\source\repos\freenewuser\GEOMiner\GEOMiner\GEOMiner\Views\Session.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GEOMiner.Models.SessionModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
